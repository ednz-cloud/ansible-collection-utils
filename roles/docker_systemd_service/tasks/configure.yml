---
# task/configure file for docker_systemd_service
- name: "Docker systemd service | Create ENV file(s) for docker service(s)"
  ansible.builtin.template:
    src: env.j2
    dest: "{{ docker_systemd_service_sysconf_dir }}/{{ docker_systemd_service_name }}"
    owner: root
    group: root
    mode: "0600"
  register: _docker_systemd_service_env_file

- name: "Docker systemd service | Pull docker image(s)"
  community.docker.docker_image:
    name: "{{ docker_systemd_service_image }}"
    force_source: "{{ docker_systemd_service_container_pull_force_source | bool }}"
    source: pull
  register: _docker_systemd_service_image_pull
  when: docker_systemd_service_container_pull_image

- name: "Docker systemd service | Merge user defined systemd unit options with defaults"
  ansible.builtin.set_fact:
    _docker_systemd_service_systemd_unit_options: >-
      {{ docker_systemd_service_systemd_unit_options_default |
        combine(docker_systemd_service_systemd_unit_options, recursive=True) }}

- name: "Docker systemd service | Merge user defined systemd service options with defaults"
  ansible.builtin.set_fact:
    _docker_systemd_service_systemd_service_options: >-
      {{ docker_systemd_service_systemd_service_options_default |
        combine(docker_systemd_service_systemd_service_options, recursive=True) }}

- name: "Docker systemd service | Merge user defined systemd install options with defaults"
  ansible.builtin.set_fact:
    _docker_systemd_service_systemd_install_options: >-
      {{ docker_systemd_service_systemd_install_options_default |
        combine(docker_systemd_service_systemd_install_options, recursive=True) }}

- name: "Docker systemd service | Create unit file(s) for service(s)"
  ansible.builtin.template:
    src: unit.j2
    dest: "/etc/systemd/system/{{ docker_systemd_service_name }}.service"
    owner: root
    group: root
    mode: "0644"
  register: _docker_systemd_service_unit_file

- name: "Docker systemd service | Copy extra configuration files"
  when: docker_systemd_service_extra_files
  block:
    - name: "Docker systemd service | Populate empty on_change list"
      ansible.builtin.set_fact:
        _docker_systemd_service_extra_file_changes: []

    - name: "Docker systemd service | Get extra file types"
      ansible.builtin.stat:
        path: "{{ item.src }}"
      loop: "{{ docker_systemd_service_extra_files }}"
      register: docker_systemd_service_extra_files_stat
      delegate_to: localhost

    - name: "Docker systemd service | Set list for file sources"
      vars:
        _docker_systemd_service_file_sources: []
      ansible.builtin.set_fact:
        _docker_systemd_service_file_sources: "{{ _docker_systemd_service_file_sources + [item.item] }}"
      when: item.stat.isreg
      loop: "{{ docker_systemd_service_extra_files_stat.results }}"
      loop_control:
        loop_var: item
      delegate_to: localhost

    - name: "Docker systemd service | Set list for directory sources"
      vars:
        _docker_systemd_service_dir_sources: []
      ansible.builtin.set_fact:
        _docker_systemd_service_dir_sources: "{{ _docker_systemd_service_dir_sources + [item.item] }}"
      when: item.stat.isdir
      loop: "{{ docker_systemd_service_extra_files_stat.results }}"
      loop_control:
        loop_var: item
      delegate_to: localhost

    - name: "Docker systemd service | Template extra file sources"
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest | regex_replace('\\.j2$', '') }}"
        owner: "{{ item.owner | default('root') }}"
        group: "{{ item.group | default('root') }}"
        mode: "{{ item.mode | default('0644') }}"
      loop: "{{ _docker_systemd_service_file_sources }}"
      when: _docker_systemd_service_file_sources is defined
      register: _docker_systemd_service_extra_file_template

    - name: "Docker systemd service | Populate on_change list for extra files"
      ansible.builtin.set_fact:
        _docker_systemd_service_extra_file_changes: >-
          {{ _docker_systemd_service_extra_file_changes + [item.item.on_change | default('noop')] }}
      loop: "{{ _docker_systemd_service_extra_file_template.results }}"
      when: item.changed

    - name: "Docker systemd service | Template extra directory sources"
      ansible.builtin.include_tasks: recursive_copy_extra_dirs.yml
      loop: "{{ _docker_systemd_service_dir_sources }}"
      loop_control:
        loop_var: dir_source_item
      when: _docker_systemd_service_dir_sources is defined

    - name: "Docker systemd service | Set reload-check & restart-check variable"
      ansible.builtin.set_fact:
        _docker_systemd_service_extra_file_changes: "{{ _docker_systemd_service_extra_file_changes | unique }}"

    - name: "Docker systemd service | Set reload-check & restart-check variable"
      ansible.builtin.set_fact:
        _docker_systemd_service_need_reload: "{{ 'reload' in _docker_systemd_service_extra_file_changes }}"
        _docker_systemd_service_need_restart: "{{ 'restart' in _docker_systemd_service_extra_file_changes }}"

- name: "Docker systemd service | Set reload-check & restart-check variable"
  ansible.builtin.set_fact:
    _docker_systemd_service_need_daemon_reload: >-
      {{ _docker_systemd_service_unit_file.changed | bool }}
    _docker_systemd_service_need_restart: true
  when: _docker_systemd_service_env_file.changed or
    _docker_systemd_service_unit_file.changed or
    _docker_systemd_service_image_pull.changed
